// <auto-generated />
using System;
using ApiPersonProfiles.Infrastructure.Persistence.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiPersonProfiles.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(EFDatabaseContext))]
    partial class EFDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiPersonProfiles.Core.Domain.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset?>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("ThumbnailFileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Pictures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTimeOffset(new DateTime(2023, 9, 23, 1, 4, 57, 743, DateTimeKind.Unspecified).AddTicks(7472), new TimeSpan(0, -6, 0, 0, 0)),
                            DateUpdated = new DateTimeOffset(new DateTime(2023, 9, 23, 1, 4, 57, 743, DateTimeKind.Unspecified).AddTicks(7496), new TimeSpan(0, -6, 0, 0, 0)),
                            FileName = "Picture.jpg",
                            ProfileId = 1,
                            ThumbnailFileName = "Picture.jpg"
                        });
                });

            modelBuilder.Entity("ApiPersonProfiles.Core.Domain.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 24,
                            DateCreated = new DateTimeOffset(new DateTime(2023, 9, 23, 1, 4, 57, 743, DateTimeKind.Unspecified).AddTicks(7695), new TimeSpan(0, -6, 0, 0, 0)),
                            DateUpdated = new DateTimeOffset(new DateTime(2023, 9, 23, 1, 4, 57, 743, DateTimeKind.Unspecified).AddTicks(7697), new TimeSpan(0, -6, 0, 0, 0)),
                            FirstName = "James",
                            LastName = "Bond",
                            Nickname = "007"
                        });
                });

            modelBuilder.Entity("ApiPersonProfiles.Core.Domain.Picture", b =>
                {
                    b.HasOne("ApiPersonProfiles.Core.Domain.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
